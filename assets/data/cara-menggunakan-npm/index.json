{"hash":"2b0713881518a083297269ac707be987ac2ab4f7","data":{"post":{"title":"Cara Menggunakan NPM","path":"/cara-menggunakan-npm/","date":"17. February 2021","timeToRead":2,"tags":[{"id":"npm","title":"npm","path":"/tag/npm/"},{"id":"JavaScript","title":"JavaScript","path":"/tag/JavaScript/"},{"id":"tools","title":"tools","path":"/tag/tools/"}],"description":"NPM (*Node Package Manager*) adalah pengelola paket default untuk runtime JavaScript Node.js. NPM terdiri dari dua bagian utama: CLI (command line interface) untuk menerbitkan (*publish*) atau mengunduh paket, dan repositori online yang menghosting paket-paket JavaScript","content":"<p>NPM (<em>Node Package Manager</em>) adalah pengelola paket default untuk runtime JavaScript Node.js. NPM terdiri dari dua bagian utama: CLI (command line interface) untuk menerbitkan (<em>publish</em>) atau mengunduh paket, dan repositori online yang menghosting paket-paket JavaScript. Konsepnya secara sederhana mirip dengan apps market, hanya saja ini disediakan untuk pengembang perangkat lunak.</p>\n<h2 id=\"menggunakan-npm\"><a href=\"#menggunakan-npm\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Menggunakan npm</h2>\n<p>Di sisi pengguna, kita bisa menginstall paket-paket yang tersedia di NPM dengan menjalankan perintah di CLI. Jadi ada baiknya mengetahui cara menggunakan alat yang powerfull ini.</p>\n<p><strong>npm install</strong> - adalah perintah yang paling umum digunakan saat mengembangkan aplikasi JavaScript / Node.js saat ini. Secara default, npm install <package-name> akan menginstal versi terbaru dari sebuah paket dengan tanda versi ^. Instalasi npm dalam konteks sebuah project adalah mengunduh paket ke folder node_modules di dalam direktori project sesuai dengan spesifikasi package.json, mengupdate versi paket (dan pada gilirannya meregenerasi package-lock.json) di mana pun itu berdasarkan pada ^ dan ~ pencocokan versi. Kita dapat menambahkan flag global (-g) jika ingin menginstal paket dalam konteks global yang dapat digunakan di direktori manapun dalam komputer (umumnya pada paket peralatan command line seperti live server misalnya). npm telah membuat penginstalan paket JavaScript begitu mudah sehingga perintah ini sering digunakan secara tidak benar. Akibatnya npm menjadi banyak lelucon programmer karena menghasilkan folder node_module dengan ukuran sangat besar.</p>\n<p>Di sinilah --production flag berperan. Di bagian sebelumnya, kita membahas dependensi dan devDependency yang dimaksudkan untuk penggunaan masing-masing dalam lingkungan produksi dan pengembangan / pengujian. Dengan melampirkan --production flag ke perintah npm install, kita hanya akan menginstal paket dari dependensi, sehingga secara drastis mengurangi ukuran node_modules. Kita hanya menginstal apa yang benar-benar diperlukan agar aplikasi dapat aktif dan berjalan.</p>\n<p><strong>npm ci</strong> - jika npm install --production optimal untuk lingkungan produksi, haruskah ada perintah yang optimal untuk pengaturan pengembangan lokal dan pengujian? Gunakan npm ci. Sama seperti bagaimana jika package-lock.json belum ada dalam proyek yang dihasilkan setiap kali npm install dipanggil, npm ci menggunakan file ini untuk mengunduh versi yang tepat dari setiap paket yang bergantung pada proyek. Ini adalah cara kami memastikan bahwa konteks proyek kami tetap sama persis di berbagai mesin, baik laptop kami yang digunakan untuk pengembangan atau lingkungan build CI (Continuous Integration) seperti Github Actions.</p>\n<p><strong>npm audit</strong> - Dengan banyaknya paket yang telah diterbitkan dan dapat dengan mudah diinstal, paket npm rentan terhadap penulis yang buruk dengan niat jahat seperti ini.Menyadari adanya masalah pada ekosistem tersebut, organisasi npm.js memunculkan ide tentang audit npm. Mereka memelihara daftar celah keamanan yang dapat diaudit oleh pengembang terhadap ketergantungan mereka menggunakan perintah audit npm. npm audit memberikan informasi kepada pengembang tentang kerentanan dan apakah ada versi dengan perbaikan untuk ditingkatkan. Sebagai contoh,</p>\n<p>Jika remediasi tersedia di upgrade versi non-breaking berikutnya, npm audit fix dapat digunakan untuk mengupgrade versi dependensi yang terpengaruh secara otomatis.</p>\n<p>Sumber: <a href=\"https://www.freecodecamp.org/news/what-is-npm-a-node-package-manager-tutorial-for-beginners/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">freecodecamp.org</a></p>\n","cover_image":null}},"context":{}}